/*
面向对象多态理解
	子类对象的多种形态
	因为子类是一个特殊的父类类型，所以可以看做父类对象
	子类可以看做子类的对象

	也就是子类可以看做是父类的对象，也可以看做是子类的对象
	同一种事物，多种形态（人是人类，也是动物类）

	多态是指针子类对象而言的
	一个对象可以定义成子类类型也可以定义成父类类型，导致属性和行为不同，这就是多种形态

Go语言通过接口模拟多态
	接口的实现
		1.看成实现类本身的类型，能够访问实现类中的属性和方法
		2.看成是对应接口的类型，那就只能够访问接口中的方法
	接口的用法
		1.一个函数如果接受接口类型作为参数，那么实际上可以传入该接口的任意实现类型对象作为参数
		2.定义一个类型为接口类型，实际上可以赋值为任意实现类的对象
	鸭子类型
		鸭子类型是动态语言的特性，是一种类型推断策略
		Go语言可以比较好的实现鸭子类型

Go语言接口理解
	想要理解Go语言的的接口，最好要理解鸭子类型
	鸭子类型：某个东西的行为像鸭子，它就是鸭子

	Go语言的接口就是那个鸭子

	接口：任何类型（对象），只要实现了接口中的所有方法，那么它就可以属于这个类型
	在创建（实例化）的时候，如果可以实现接口中的方法，那么它可以实例化成接口对象，也可以实例化成自己的对象
 */

package main

func main() {

}
